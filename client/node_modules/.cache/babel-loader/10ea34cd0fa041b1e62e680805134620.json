{"ast":null,"code":"const API_URI = \"v1\"; // Load planets and return as JSON.\n\nasync function httpGetPlanets() {\n  const response = await fetch(`${API_URI}/planet`);\n  return response.json();\n} // Load launches, sort by flight number, and return as JSON.\n\n\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URI}/launch`);\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  }); // return response.json().sort((a,b)=>a.flightNumber-b.flightNumber)\n} // Submit given launch data to launch system.\n\n\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(`${API_URI}/launch`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(launch)\n    });\n  } catch (err) {\n    return {\n      ok: false\n    };\n  }\n} // Delete launch with given ID.\n\n\nasync function httpAbortLaunch(id) {\n  try {\n    return fetch(`${API_URI}/launch/${id}`, {\n      method: \"delete\"\n    });\n  } catch (err) {\n    return {\n      ok: false\n    };\n  }\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["/Users/manjunj/Desktop/Web Development/NASA/client/src/hooks/requests.js"],"names":["API_URI","httpGetPlanets","response","fetch","json","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","err","ok","httpAbortLaunch","id"],"mappings":"AAAA,MAAMA,OAAO,GAAG,IAAhB,C,CAEA;;AACA,eAAeC,cAAf,GAAgC;AAC9B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,SAAZ,CAA5B;AACA,SAAOE,QAAQ,CAACE,IAAT,EAAP;AACD,C,CAED;;;AACA,eAAeC,eAAf,GAAiC;AAC/B,QAAMH,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,SAAZ,CAA5B;AACA,QAAMM,eAAe,GAAG,MAAMJ,QAAQ,CAACE,IAAT,EAA9B;AACA,SAAOE,eAAe,CAACC,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpC,WAAOD,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAA1B;AACD,GAFM,CAAP,CAH+B,CAM/B;AACD,C,CAED;;;AACA,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC;AACtC,MAAG;AACD,WAAO,MAAMT,KAAK,CAAE,GAAEH,OAAQ,SAAZ,EAAqB;AACvCa,MAAAA,MAAM,EAAC,MADgC;AAEvCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF8B;AAKvCC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALkC,KAArB,CAAlB;AAOD,GARD,CAQE,OAAMM,GAAN,EAAU;AACV,WAAO;AACLC,MAAAA,EAAE,EAAC;AADE,KAAP;AAGD;AACF,C,CAED;;;AACA,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC;AACjC,MAAG;AACD,WAAOlB,KAAK,CAAE,GAAEH,OAAQ,WAAUqB,EAAG,EAAzB,EAA2B;AACrCR,MAAAA,MAAM,EAAC;AAD8B,KAA3B,CAAZ;AAGD,GAJD,CAIC,OAAMK,GAAN,EAAU;AACT,WAAO;AACLC,MAAAA,EAAE,EAAC;AADE,KAAP;AAGD;AACF;;AAED,SACElB,cADF,EAEEI,eAFF,EAGEM,gBAHF,EAIES,eAJF","sourcesContent":["const API_URI = \"v1\"\n\n// Load planets and return as JSON.\nasync function httpGetPlanets() {\n  const response = await fetch(`${API_URI}/planet`)\n  return response.json()\n}\n\n// Load launches, sort by flight number, and return as JSON.\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URI}/launch`)\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n  // return response.json().sort((a,b)=>a.flightNumber-b.flightNumber)\n}\n\n// Submit given launch data to launch system.\nasync function httpSubmitLaunch(launch) {\n  try{\n    return await fetch(`${API_URI}/launch`,{\n    method:\"post\",\n    headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    body:JSON.stringify(launch)\n    })\n  } catch(err){\n    return {\n      ok:false\n    }\n  }\n}\n\n// Delete launch with given ID.\nasync function httpAbortLaunch(id) {\n  try{\n    return fetch(`${API_URI}/launch/${id}`,{\n      method:\"delete\"\n    })\n  }catch(err){\n    return {\n      ok:false\n    }\n  }\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}